name: Deploy

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  check_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Check deployed version
        run: |
          [ "$GITHUB_REF_NAME" == "v$(python setup.py --version)" ]
  tests:
    needs: check_version
    uses: ./.github/workflows/tests.yml
  deploy-pypi:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
  build-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        python-version: ["3.10"]
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Create artifacts
        run: |
          cd deploy/linux
          bash build.sh
          mv dist/BOOM BOOM-${{ matrix.os }}
          mv boom_$(boom_version)-1_all.deb "boom_$(boom_version)-1_all (${{ matrix.os }}).deb"
      - name: Upload artifacts for linux
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            deploy/linux/BOOM-${{ matrix.os }}
            deploy/linux/boom*.deb
  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11, macos-12]
        python-version: ["3.10"]
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Create artifacts
        run: |
          cd deploy/macos
          pyinstaller BOOM.spec
          mv dist/BOOM.app BOOM-${{ matrix.os }}.app
          zip -r BOOM-${{ matrix.os }}.app.zip BOOM-${{ matrix.os }}.app
      - name: Upload artifacts for macos
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: deploy/macos/BOOM-${{ matrix.os }}.app.zip
  build-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
        python-version: ["3.10"]
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Create artifacts
        run: |
          cd deploy/windows
          pyinstaller BOOM.spec
          mv dist/BOOM.exe BOOM-${{ matrix.os }}.exe
      - name: Upload artifacts for windows
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: deploy/windows/BOOM-${{ matrix.os }}.exe
  create-gh-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Release ${{github.ref_name}}
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *-artifacts/*
